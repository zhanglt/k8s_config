# Source: gitlab/templates/shared-secrets/self-signed-cert-job.yml
apiVersion: batch/v1
kind: Job
metadata:
  name: gitlab-shared-secrets-1-x5d-selfsign
  namespace: redis
  labels:
    app: gitlab
    chart: gitlab-5.9.2
    release: gitlab
    heritage: Helm
    
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
spec:
  template:
    metadata:
      labels:
        app: gitlab
        release: gitlab
      annotations:
    spec:
      
      securityContext:
        runAsUser: 65534
        fsGroup: 65534
      serviceAccountName: gitlab-shared-secrets
      restartPolicy: Never
      
      initContainers:
      - name: cfssl-self-sign
        image: "registry.gitlab.com/gitlab-org/build/cng/cfssl-self-sign:1.6.1@sha256:34714b9e5809c1a35c0530da70fa69d7caf04150e7168212611905d97902168e"        
        env:
        - name: CA_SUBJECT
          value: "GitLab Helm Chart" # defaults to GitLab in container
        - name: CA_ORG
          value: "redis" # defaults to GitLab in container
        - name: CA_ORG_UNIT
          value: "gitlab" # defaults to Cloud Native in container
        - name: CERT_SUBJECT
          value: "gitlab.code.local" # defaults to GitLab in container
        - name: CERT_DOMAIN
          value: "gitlab.code.local" # defaults to example.com in container
        - name: EXPIRY
          value: "3650d" # defaults to 8076h in container
        - name: ALGORITHM
          value: "rsa" # defaults to ecdsa in container
        - name: KEY_SIZE
          value: "4096" # defaults to 256 inside container
        volumeMounts:
        - name: certs-path
          mountPath: /output
        resources:
          requests:
            cpu: 50m
      containers:
      - name: kubectl
        image: "registry.gitlab.com/gitlab-org/build/cng/kubectl:1.18.20@sha256:824750f20381facb70cb90d3cd41da075d7ffde5a14de6f14f7037285fe0ddb7"        
        command:
        - /bin/bash
        - -exc
        - |
          certname=gitlab-wildcard-tls
          # create wildcard certificate secret
          kubectl create secret tls $certname \
            --cert=/output/wildcard.pem --key=/output/wildcard-key.pem || true
          kubectl --namespace=$namespace label \
            secret $certname  $(echo 'app.kubernetes.io/name=gitlab' | sed -E 's/=[^ ]*/-/g')
          kubectl --namespace=$namespace label --overwrite \
            secret $certname app=gitlab chart=gitlab-5.9.2 release=gitlab heritage=Helm 
          # create CA certificate secret
          kubectl create secret generic ${certname}-ca \
            --from-file=cfssl_ca=/output/ca.pem || true
          kubectl --namespace=$namespace label \
            secret ${certname}-ca  $(echo 'app.kubernetes.io/name=gitlab' | sed -E 's/=[^ ]*/-/g')
          kubectl --namespace=$namespace label --overwrite \
            secret ${certname}-ca app=gitlab chart=gitlab-5.9.2 release=gitlab heritage=Helm 
          # create certificate chain for GitLab Runner
          cat /output/ca.pem /output/wildcard.pem > /tmp/gitlab.gitlab.code.local.crt
          kubectl create secret generic ${certname}-chain \
            --from-file=/tmp/gitlab.gitlab.code.local.crt || true
          kubectl --namespace=$namespace label \
            secret ${certname}-chain  $(echo 'app.kubernetes.io/name=gitlab' | sed -E 's/=[^ ]*/-/g')
          kubectl --namespace=$namespace label --overwrite \
            secret ${certname}-chain app=gitlab chart=gitlab-5.9.2 release=gitlab heritage=Helm 
        volumeMounts:
        - name: certs-path
          mountPath: /output
        resources:
          requests:
            cpu: 50m
      volumes:
      - name: certs-path
        emptyDir: {}

